// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BetEventLauncher extends ethereum.Event {
  get params(): BetEventLauncher__Params {
    return new BetEventLauncher__Params(this);
  }
}

export class BetEventLauncher__Params {
  _event: BetEventLauncher;

  constructor(event: BetEventLauncher) {
    this._event = event;
  }

  get matchId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get betId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get betAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get betMakerAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get betTakerAddress(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get betWinnerAddress(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get makerBetTeam(): string {
    return this._event.parameters[6].value.toString();
  }
}

export class MatchUpdateLauncher extends ethereum.Event {
  get params(): MatchUpdateLauncher__Params {
    return new MatchUpdateLauncher__Params(this);
  }
}

export class MatchUpdateLauncher__Params {
  _event: MatchUpdateLauncher;

  constructor(event: MatchUpdateLauncher) {
    this._event = event;
  }

  get matchId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get teamOne(): string {
    return this._event.parameters[1].value.toString();
  }

  get teamTwo(): string {
    return this._event.parameters[2].value.toString();
  }

  get winningTeam(): string {
    return this._event.parameters[3].value.toString();
  }

  get betIds(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }
}

export class betMain extends ethereum.SmartContract {
  static bind(address: Address): betMain {
    return new betMain("betMain", address);
  }

  _betIDs(): BigInt {
    let result = super.call("_betIDs", "_betIDs():(uint256)", []);

    return result[0].toBigInt();
  }

  try__betIDs(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("_betIDs", "_betIDs():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  match_id(): BigInt {
    let result = super.call("match_id", "match_id():(uint256)", []);

    return result[0].toBigInt();
  }

  try_match_id(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("match_id", "match_id():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class _createBetCall extends ethereum.Call {
  get inputs(): _createBetCall__Inputs {
    return new _createBetCall__Inputs(this);
  }

  get outputs(): _createBetCall__Outputs {
    return new _createBetCall__Outputs(this);
  }
}

export class _createBetCall__Inputs {
  _call: _createBetCall;

  constructor(call: _createBetCall) {
    this._call = call;
  }

  get betAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _matchId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _TeamName(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class _createBetCall__Outputs {
  _call: _createBetCall;

  constructor(call: _createBetCall) {
    this._call = call;
  }
}

export class _createMatchsCall extends ethereum.Call {
  get inputs(): _createMatchsCall__Inputs {
    return new _createMatchsCall__Inputs(this);
  }

  get outputs(): _createMatchsCall__Outputs {
    return new _createMatchsCall__Outputs(this);
  }
}

export class _createMatchsCall__Inputs {
  _call: _createMatchsCall;

  constructor(call: _createMatchsCall) {
    this._call = call;
  }

  get _teamOne(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _teamTwo(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class _createMatchsCall__Outputs {
  _call: _createMatchsCall;

  constructor(call: _createMatchsCall) {
    this._call = call;
  }
}

export class _joinBetCall extends ethereum.Call {
  get inputs(): _joinBetCall__Inputs {
    return new _joinBetCall__Inputs(this);
  }

  get outputs(): _joinBetCall__Outputs {
    return new _joinBetCall__Outputs(this);
  }
}

export class _joinBetCall__Inputs {
  _call: _joinBetCall;

  constructor(call: _joinBetCall) {
    this._call = call;
  }

  get _matchId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _betId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class _joinBetCall__Outputs {
  _call: _joinBetCall;

  constructor(call: _joinBetCall) {
    this._call = call;
  }
}

export class UpdateWinningTeamCall extends ethereum.Call {
  get inputs(): UpdateWinningTeamCall__Inputs {
    return new UpdateWinningTeamCall__Inputs(this);
  }

  get outputs(): UpdateWinningTeamCall__Outputs {
    return new UpdateWinningTeamCall__Outputs(this);
  }
}

export class UpdateWinningTeamCall__Inputs {
  _call: UpdateWinningTeamCall;

  constructor(call: UpdateWinningTeamCall) {
    this._call = call;
  }

  get _matchId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get winningTeam(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateWinningTeamCall__Outputs {
  _call: UpdateWinningTeamCall;

  constructor(call: UpdateWinningTeamCall) {
    this._call = call;
  }
}
